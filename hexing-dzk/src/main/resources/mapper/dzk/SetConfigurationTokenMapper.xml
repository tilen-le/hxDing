<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hexing.dzk.mapper.SetConfigurationTokenMapper">
    
    <resultMap type="SetConfigurationToken" id="SetConfigurationTokenResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="setKey"    column="set_key"    />
        <result property="setValue"    column="set_value"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="appKey"    column="appKey"    />
        <result property="appSecret"    column="appSecret"    />
        <result property="other"    column="other"    />
    </resultMap>

    <sql id="selectSetConfigurationTokenVo">
        select id, name, set_key, set_value, create_time, update_time, appKey, appSecret, other from set_configuration_token
    </sql>

    <select id="selectSetConfigurationTokenList" parameterType="SetConfigurationToken" resultMap="SetConfigurationTokenResult">
        <include refid="selectSetConfigurationTokenVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="setKey != null  and setKey != ''"> and set_key = #{setKey}</if>
            <if test="setValue != null  and setValue != ''"> and set_value = #{setValue}</if>
            <if test="appKey != null  and appKey != ''"> and appKey = #{appKey}</if>
            <if test="appSecret != null  and appSecret != ''"> and appSecret = #{appSecret}</if>
            <if test="other != null  and other != ''"> and other = #{other}</if>
        </where>
    </select>
    
    <select id="selectSetConfigurationTokenById" parameterType="Long" resultMap="SetConfigurationTokenResult">
        <include refid="selectSetConfigurationTokenVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertSetConfigurationToken" parameterType="SetConfigurationToken" useGeneratedKeys="true" keyProperty="id">
        insert into set_configuration_token
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="name != null">name,</if>
            <if test="setKey != null and setKey != ''">set_key,</if>
            <if test="setValue != null and setValue != ''">set_value,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="appKey != null and appKey != ''">appKey,</if>
            <if test="appSecret != null and appSecret != ''">appSecret,</if>
            <if test="other != null">other,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="name != null">#{name},</if>
            <if test="setKey != null and setKey != ''">#{setKey},</if>
            <if test="setValue != null and setValue != ''">#{setValue},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="appKey != null and appKey != ''">#{appKey},</if>
            <if test="appSecret != null and appSecret != ''">#{appSecret},</if>
            <if test="other != null">#{other},</if>
         </trim>
    </insert>

    <update id="updateSetConfigurationToken" parameterType="SetConfigurationToken">
        update set_configuration_token
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">name = #{name},</if>
            <if test="setKey != null and setKey != ''">set_key = #{setKey},</if>
            <if test="setValue != null and setValue != ''">set_value = #{setValue},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="appKey != null and appKey != ''">appKey = #{appKey},</if>
            <if test="appSecret != null and appSecret != ''">appSecret = #{appSecret},</if>
            <if test="other != null">other = #{other},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteSetConfigurationTokenById" parameterType="Long">
        delete from set_configuration_token where id = #{id}
    </delete>

    <delete id="deleteSetConfigurationTokenByIds" parameterType="String">
        delete from set_configuration_token where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>